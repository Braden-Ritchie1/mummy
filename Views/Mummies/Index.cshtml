@*@model IEnumerable<mummy.Models.Mummy>*@

@{
    ViewData["Title"] = "Index";
}

@*@model List<Mummy>*@
@model MummyViewModel

<h1>Burial Data</h1>

<p>
    <a asp-action="Create">Create New Record</a>
</p>


<div>
    <h3>Filter Your Search:</h3>
    <form method="get" action="@Url.Action("Search", "Mummies", new { area = "" })">
        @*//action="@Url.Action("Search", "Mummies")"*@
        <div class="container">
            <div class="col-sm">
                <label for="location">Location:</label>
                <input type="text" name="location" id="location" value="@ViewData["CurrentFilterLocation"]">

                <label for="headDirection">Head Direction:</label>
                <input type="text" name="headDirection" id="headDirection" value="@ViewData["CurrentFilterHeadDirection"]">

                <label for="sex">Sex:</label>
                <select type="text" name="sex" id="sex" value="@ViewData["CurrentFilterSex"]">
                    <option disabled selected value=""> -- select an option -- </option>
                    <option value="M">M (Male)</option>
                    <option value="F">F (Female)</option>
                </select>
            </div><br />
            <div class="col-sm">
                <label for="hairColor">Hair Color:</label>
                <input type="text" name="hairColor" id="hairColor" value="@ViewData["CurrentFilterHairColor"]">

                <label for="burialNumber">Burial Number:</label>
                <input type="text" name="burialNumber" id="burialNumber" value="@ViewData["CurrentFilterBurialNumber"]">

                <label for="ageAtDeath">Age at Death:</label>
                <select type="text" name="ageAtDeath" id="ageAtDeath" value="@ViewData["CurrentFilterAgeAtDeath"]">
                    <option disabled selected value=""> -- select an option -- </option>
                    <option value="A">A (Adult)</option>
                    <option value="C">C (Child)</option>
                </select>
            </div><br />
            <div class="col-sm">
                <label for="structureValue">Structure:</label>
                <input type="text" name="structureValue" id="structureValue" value="@ViewData["CurrentFilterStructureValue"]">

                <label for="colorValue">Color:</label>
                <input type="text" name="colorValue" id="colorValue" value="@ViewData["CurrentFilterColorValue"]">

                <label for="textileValue">Textile:</label>
                <input type="text" name="textileValue" id="textileValue" value="@ViewData["CurrentFilterTextileValue"]"><br />
            </div><br />
            <div class="col-sm">
                <label for="length">Length:</label>
                <input type="text" name="length" id="length" value="@ViewData["CurrentFilterLength"]">
            </div><br />
            <button class="btn btn-outline-primary btn-md" type="submit">Filter</button>
        </div>
    </form>
    <br />

<table class="table table-bordered table-striped">
    <thead class="text-center font-weight-bold">
        <tr>
            <th>HeadDirection</th>
            <th>Location</th>
            <th>BurialNumber</th>
            <th>AgeAtDeath</th>
            <th>Sex</th>
            <th>Length</th>
            <th>TextileValue</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Mummy) {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HeadDirection)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BurialNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AgeAtDeath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sex)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TextileValue)
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div page-model="@Model.PageInfo" page-action="Index" page-classes-enabled="true"
     page-class="btn" page-class-normal="btn-outline-dark"
     page-class-selected="btn-primary" class="btn-group pull-right m-1">
</div>
